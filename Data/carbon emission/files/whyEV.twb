<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='whyEV' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='annual-co-emissions-by-region' inline='true' name='federated.04ydhyd05agkc911xtzw60l7xqbk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='annual-co-emissions-by-region' name='textscan.0ist4sd0pncd4o1df9h0g0erpxxj'>
            <connection class='textscan' directory='/Volumes/Space/Final Project/Files/carbon emission' filename='annual-co-emissions-by-region.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation all='true' name='Union' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='Entity' />
            <column datatype='string' name='Code' />
            <column datatype='integer' name='Year' />
            <column datatype='integer' name='Cement (tonnes)' />
            <column datatype='integer' name='Flaring (tonnes)' />
            <column datatype='integer' name='Oil (tonnes)' />
            <column datatype='integer' name='Coal (tonnes)' />
            <column datatype='integer' name='Gas (tonnes)' />
            <column datatype='real' name='Annual CO₂ emissions (tonnes )' />
            <column datatype='real' name='Transport (%)' />
            <column datatype='real' name='Electricity and heat production (%)' />
            <column datatype='real' name='Manufacturing industries &amp; construction (%)' />
            <column datatype='real' name='Other sectors (%)' />
            <column datatype='real' name='Residential buildings &amp; commercial and public services (%)' />
            <column datatype='real' name='CO₂ emissions per capita (tonnes per capita)' />
            <column datatype='integer' name='GDP per capita (international-$ (in 2011 prices))' />
            <column datatype='integer' name='Total population (Gapminder)' />
            <column datatype='real' name='Per capita CO₂ emissions (tonnes per capita)' />
            <column datatype='real' name='CO₂ concentration (parts per million)' />
            <column datatype='real' name='Other sources (tonnes)' />
            <column datatype='real' name='Waste (tonnes)' />
            <column datatype='real' name='Industry (tonnes)' />
            <column datatype='real' name='Residential &amp; commercial (tonnes)' />
            <column datatype='real' name='Transport (tonnes)' />
            <column datatype='real' name='Agriculture (tonnes)' />
            <column datatype='real' name='Forestry (tonnes)' />
            <column datatype='real' name='Land use sources (tonnes)' />
            <column datatype='real' name='Energy (tonnes)' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.0ist4sd0pncd4o1df9h0g0erpxxj' name='CO2-by-source.csv' table='[CO2-by-source#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='string' name='Entity' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='integer' name='Year' ordinal='2' />
              <column datatype='integer' name='Cement (tonnes)' ordinal='3' />
              <column datatype='integer' name='Flaring (tonnes)' ordinal='4' />
              <column datatype='integer' name='Oil (tonnes)' ordinal='5' />
              <column datatype='integer' name='Coal (tonnes)' ordinal='6' />
              <column datatype='integer' name='Gas (tonnes)' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.0ist4sd0pncd4o1df9h0g0erpxxj' name='annual-co-emissions-by-region.csv' table='[annual-co-emissions-by-region#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='string' name='Entity' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='integer' name='Year' ordinal='2' />
              <column datatype='real' name='Annual CO₂ emissions (tonnes )' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.0ist4sd0pncd4o1df9h0g0erpxxj' name='carbon-dioxide-co2-emissions-by-sector-or-source.csv' table='[carbon-dioxide-co2-emissions-by-sector-or-source#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='string' name='Entity' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='integer' name='Year' ordinal='2' />
              <column datatype='real' name='Transport (%)' ordinal='3' />
              <column datatype='real' name='Electricity and heat production (%)' ordinal='4' />
              <column datatype='real' name='Manufacturing industries &amp; construction (%)' ordinal='5' />
              <column datatype='real' name='Other sectors (%)' ordinal='6' />
              <column datatype='real' name='Residential buildings &amp; commercial and public services (%)' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.0ist4sd0pncd4o1df9h0g0erpxxj' name='co-emissions-per-capita-vs-gdp-per-capita-international-.csv' table='[co-emissions-per-capita-vs-gdp-per-capita-international-#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='string' name='Entity' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='integer' name='Year' ordinal='2' />
              <column datatype='real' name='CO₂ emissions per capita (tonnes per capita)' ordinal='3' />
              <column datatype='integer' name='GDP per capita (international-$ (in 2011 prices))' ordinal='4' />
              <column datatype='integer' name='Total population (Gapminder)' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.0ist4sd0pncd4o1df9h0g0erpxxj' name='co-emissions-per-capita.csv' table='[co-emissions-per-capita#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='string' name='Entity' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='integer' name='Year' ordinal='2' />
              <column datatype='real' name='Per capita CO₂ emissions (tonnes per capita)' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.0ist4sd0pncd4o1df9h0g0erpxxj' name='co2-concentration-long-term (1).csv' table='[co2-concentration-long-term (1)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='string' name='Entity' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='integer' name='Year' ordinal='2' />
              <column datatype='real' name='CO₂ concentration (parts per million)' ordinal='3' />
            </columns>
          </relation>
          <relation connection='textscan.0ist4sd0pncd4o1df9h0g0erpxxj' name='greenhouse-gas-emissions-by-sector.csv' table='[greenhouse-gas-emissions-by-sector#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
              <column datatype='string' name='Entity' ordinal='0' />
              <column datatype='string' name='Code' ordinal='1' />
              <column datatype='integer' name='Year' ordinal='2' />
              <column datatype='real' name='Other sources (tonnes)' ordinal='3' />
              <column datatype='real' name='Waste (tonnes)' ordinal='4' />
              <column datatype='real' name='Industry (tonnes)' ordinal='5' />
              <column datatype='real' name='Residential &amp; commercial (tonnes)' ordinal='6' />
              <column datatype='real' name='Transport (tonnes)' ordinal='7' />
              <column datatype='real' name='Agriculture (tonnes)' ordinal='8' />
              <column datatype='real' name='Forestry (tonnes)' ordinal='9' />
              <column datatype='real' name='Land use sources (tonnes)' ordinal='10' />
              <column datatype='real' name='Energy (tonnes)' ordinal='11' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Union]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cement (tonnes)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cement (tonnes)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Cement (tonnes)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flaring (tonnes)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Flaring (tonnes)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Flaring (tonnes)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Oil (tonnes)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Oil (tonnes)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Oil (tonnes)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coal (tonnes)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Coal (tonnes)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Coal (tonnes)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gas (tonnes)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Gas (tonnes)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Gas (tonnes)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Annual CO₂ emissions (tonnes )</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Annual CO₂ emissions (tonnes )]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Annual CO₂ emissions (tonnes )</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transport (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Transport (%)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Transport (%)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Electricity and heat production (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Electricity and heat production (%)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Electricity and heat production (%)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Manufacturing industries &amp; construction (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Manufacturing industries &amp; construction (%)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Manufacturing industries &amp; construction (%)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other sectors (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Other sectors (%)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Other sectors (%)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Residential buildings &amp; commercial and public services (%)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Residential buildings &amp; commercial and public services (%)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Residential buildings &amp; commercial and public services (%)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO₂ emissions per capita (tonnes per capita)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO₂ emissions per capita (tonnes per capita)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>CO₂ emissions per capita (tonnes per capita)</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP per capita (international-$ (in 2011 prices))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP per capita (international-$ (in 2011 prices))]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>GDP per capita (international-$ (in 2011 prices))</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total population (Gapminder)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total population (Gapminder)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Total population (Gapminder)</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per capita CO₂ emissions (tonnes per capita)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Per capita CO₂ emissions (tonnes per capita)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Per capita CO₂ emissions (tonnes per capita)</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO₂ concentration (parts per million)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CO₂ concentration (parts per million)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>CO₂ concentration (parts per million)</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other sources (tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Other sources (tonnes)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Other sources (tonnes)</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Waste (tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Waste (tonnes)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Waste (tonnes)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Industry (tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Industry (tonnes)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Industry (tonnes)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Residential &amp; commercial (tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Residential &amp; commercial (tonnes)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Residential &amp; commercial (tonnes)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Transport (tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Transport (tonnes)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Transport (tonnes)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Agriculture (tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Agriculture (tonnes)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Agriculture (tonnes)</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Forestry (tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Forestry (tonnes)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Forestry (tonnes)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Land use sources (tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Land use sources (tonnes)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Land use sources (tonnes)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy (tonnes)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Energy (tonnes)]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Energy (tonnes)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Union]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Agriculture (tonnes):qk]&quot;' value='Agriculture' />
          <alias key='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Energy (tonnes):qk]&quot;' value='Energy' />
          <alias key='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Forestry (tonnes):qk]&quot;' value='Forestry ' />
          <alias key='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Industry (tonnes):qk]&quot;' value='Industry ' />
          <alias key='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Land use sources (tonnes):qk]&quot;' value='Land use sources' />
          <alias key='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Oil (tonnes):qk]&quot;' value='Oil' />
          <alias key='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Residential &amp; commercial (tonnes):qk]&quot;' value='Residential &amp; commercial' />
          <alias key='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Transport (tonnes):qk]&quot;' value='Transport' />
          <alias key='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Waste (tonnes):qk]&quot;' value='Waste' />
        </aliases>
      </column>
      <column datatype='real' name='[Agriculture (tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Electricity and heat production (%)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Energy (tonnes)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
      <column datatype='real' name='[Forestry (tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Industry (tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Land use sources (tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Manufacturing industries &amp; construction (%)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Oil (tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Other sectors (%)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Residential &amp; commercial (tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Residential buildings &amp; commercial and public services (%)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Transport (%)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Transport (tonnes)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Waste (tonnes)]' role='measure' type='quantitative' />
      <column-instance column='[Transport (%)]' derivation='Attribute' name='[attr:Transport (%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Transport (%)]' derivation='Avg' name='[avg:Transport (%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Electricity and heat production (%)]' derivation='Max' name='[max:Electricity and heat production (%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Manufacturing industries &amp; construction (%)]' derivation='Max' name='[max:Manufacturing industries &amp; construction (%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Other sectors (%)]' derivation='Max' name='[max:Other sectors (%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Residential buildings &amp; commercial and public services (%)]' derivation='Max' name='[max:Residential buildings &amp; commercial and public services (%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Transport (%)]' derivation='Max' name='[max:Transport (%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
      <column-instance column='[Transport (%)]' derivation='None' name='[none:Transport (%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Agriculture (tonnes)]' derivation='Sum' name='[sum:Agriculture (tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Electricity and heat production (%)]' derivation='Sum' name='[sum:Electricity and heat production (%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Energy (tonnes)]' derivation='Sum' name='[sum:Energy (tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forestry (tonnes)]' derivation='Sum' name='[sum:Forestry (tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Industry (tonnes)]' derivation='Sum' name='[sum:Industry (tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Land use sources (tonnes)]' derivation='Sum' name='[sum:Land use sources (tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Manufacturing industries &amp; construction (%)]' derivation='Sum' name='[sum:Manufacturing industries &amp; construction (%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Oil (tonnes)]' derivation='Sum' name='[sum:Oil (tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Other sectors (%)]' derivation='Sum' name='[sum:Other sectors (%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Residential &amp; commercial (tonnes)]' derivation='Sum' name='[sum:Residential &amp; commercial (tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Residential buildings &amp; commercial and public services (%)]' derivation='Sum' name='[sum:Residential buildings &amp; commercial and public services (%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Transport (%)]' derivation='Sum' name='[sum:Transport (%):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Transport (tonnes)]' derivation='Sum' name='[sum:Transport (tonnes):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Waste (tonnes)]' derivation='Sum' name='[sum:Waste (tonnes):qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/spacemaverick/Documents/My Tableau Repository/Datasources/co-emissions.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/26/2020 06:34:28 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='annual-co-emissions-by-region' increment-value='%null%' refresh-type='create' rows-inserted='155787' timestamp-start='2020-03-26 18:34:28.088' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>0</ordinal>
              <family>Union</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1019</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>1</ordinal>
              <family>Union</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>610</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>2</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>841</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cement (tonnes)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Cement (tonnes)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cement (tonnes)</remote-alias>
              <ordinal>3</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3085</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Flaring (tonnes)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Flaring (tonnes)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Flaring (tonnes)</remote-alias>
              <ordinal>4</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1084</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Oil (tonnes)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Oil (tonnes)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Oil (tonnes)</remote-alias>
              <ordinal>5</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4401</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Coal (tonnes)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Coal (tonnes)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Coal (tonnes)</remote-alias>
              <ordinal>6</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5041</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gas (tonnes)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Gas (tonnes)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Gas (tonnes)</remote-alias>
              <ordinal>7</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2965</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Annual CO₂ emissions (tonnes )</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Annual CO₂ emissions (tonnes )]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Annual CO₂ emissions (tonnes )</remote-alias>
              <ordinal>8</ordinal>
              <family>Union</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9769</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Transport (%)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Transport (%)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Transport (%)</remote-alias>
              <ordinal>9</ordinal>
              <family>Union</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12440</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Electricity and heat production (%)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Electricity and heat production (%)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Electricity and heat production (%)</remote-alias>
              <ordinal>10</ordinal>
              <family>Union</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7720</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Manufacturing industries &amp; construction (%)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Manufacturing industries &amp; construction (%)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Manufacturing industries &amp; construction (%)</remote-alias>
              <ordinal>11</ordinal>
              <family>Union</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12440</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Other sectors (%)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Other sectors (%)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Other sectors (%)</remote-alias>
              <ordinal>12</ordinal>
              <family>Union</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6630</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Residential buildings &amp; commercial and public services (%)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Residential buildings &amp; commercial and public services (%)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Residential buildings &amp; commercial and public services (%)</remote-alias>
              <ordinal>13</ordinal>
              <family>Union</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7720</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CO₂ emissions per capita (tonnes per capita)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CO₂ emissions per capita (tonnes per capita)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CO₂ emissions per capita (tonnes per capita)</remote-alias>
              <ordinal>14</ordinal>
              <family>Union</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14179</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP per capita (international-$ (in 2011 prices))</remote-name>
              <remote-type>20</remote-type>
              <local-name>[GDP per capita (international-$ (in 2011 prices))]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GDP per capita (international-$ (in 2011 prices))</remote-alias>
              <ordinal>15</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13913</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total population (Gapminder)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total population (Gapminder)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total population (Gapminder)</remote-alias>
              <ordinal>16</ordinal>
              <family>Union</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>26696</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Per capita CO₂ emissions (tonnes per capita)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Per capita CO₂ emissions (tonnes per capita)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Per capita CO₂ emissions (tonnes per capita)</remote-alias>
              <ordinal>17</ordinal>
              <family>Union</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18064</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CO₂ concentration (parts per million)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CO₂ concentration (parts per million)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CO₂ concentration (parts per million)</remote-alias>
              <ordinal>18</ordinal>
              <family>Union</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>737</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Other sources (tonnes)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Other sources (tonnes)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Other sources (tonnes)</remote-alias>
              <ordinal>19</ordinal>
              <family>Union</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4664</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Waste (tonnes)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Waste (tonnes)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Waste (tonnes)</remote-alias>
              <ordinal>20</ordinal>
              <family>Union</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8390</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Industry (tonnes)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Industry (tonnes)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Industry (tonnes)</remote-alias>
              <ordinal>21</ordinal>
              <family>Union</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8390</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Residential &amp; commercial (tonnes)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Residential &amp; commercial (tonnes)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Residential &amp; commercial (tonnes)</remote-alias>
              <ordinal>22</ordinal>
              <family>Union</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4543</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Transport (tonnes)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Transport (tonnes)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Transport (tonnes)</remote-alias>
              <ordinal>23</ordinal>
              <family>Union</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4420</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Agriculture (tonnes)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Agriculture (tonnes)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Agriculture (tonnes)</remote-alias>
              <ordinal>24</ordinal>
              <family>Union</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13157</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Forestry (tonnes)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Forestry (tonnes)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Forestry (tonnes)</remote-alias>
              <ordinal>25</ordinal>
              <family>Union</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5221</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Land use sources (tonnes)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Land use sources (tonnes)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Land use sources (tonnes)</remote-alias>
              <ordinal>26</ordinal>
              <family>Union</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3902</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Energy (tonnes)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Energy (tonnes)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Energy (tonnes)</remote-alias>
              <ordinal>27</ordinal>
              <family>Union</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4420</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Table Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Table Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Table Name</remote-alias>
              <ordinal>28</ordinal>
              <family>Union</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.140171' measure-ordering='alphabetic' measure-percentage='0.859829' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Entity:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eastern Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latin America &amp; Caribbean (excluding high income)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Non-Annex I countries&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Australia &amp; New Zealand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China, Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Europe (other)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;IDA blend&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kuwaiti Oil Fires&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Europe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Statistical differences&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Christmas Island&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Asia &amp; Pacific (excluding high income)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Small island developing States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Western Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Northern Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Belgium-Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Former USSR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latin America &amp; Caribbean (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norfolk Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Americas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Asia &amp; Pacific (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;International transport&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Late-demographic dividend&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Middle East &amp; North Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena, Ascension and Tristan da Cunha&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sudan (former)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Western Asia&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Asia and Pacific (other)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OECD&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China, Macao SAR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;IDA only&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kyrgysztan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Low Income Food Deficit Countries&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Micronesia (region)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands Antilles (former)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czechoslovakia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ethiopia PDR&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pre-demographic dividend&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Southern Asia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Americas (other)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eastern Africa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latin America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Middle East &amp; North Africa (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Western Europe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central America&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Northern America&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Polynesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Asia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South-Eastern Asia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;EU-28&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;IBRD only&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Melanesia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Serbia and Montenegro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Southern Europe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;IDA &amp; IBRD total&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Net Food Importing Developing Countries&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Annex I countries&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Former Yugoslavia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yugoslav SFR&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eastern Asia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Svalbard and Jan Mayen Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China, mainland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Early-demographic dividend&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Europe &amp; Central Asia (excluding high income)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;IDA total&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Middle Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pacific Islands Trust Territory&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sub-Saharan Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;USSR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Southern and Antarctic Territories&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Post-demographic dividend&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Southern Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Antarctic Fisheries&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Least developed countries&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pitcairn Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Asia (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China, Taiwan Province of&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Europe &amp; Central Asia (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Land Locked Developing Countries&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Middle East&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Barthlemy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sub-Saharan Africa (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wallis and Futuna Islands&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[max:Electricity and heat production (\%):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Electricity and heat production (\%):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Lower (℃):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[max:Other sectors (\%):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Other sectors (\%):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[max:Manufacturing industries &amp; construction (\%):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Manufacturing industries &amp; construction (\%):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[max:Residential buildings &amp; commercial and public services (\%):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Residential buildings &amp; commercial and public services (\%):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Upper (℃):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[attr:Transport (\%):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[avg:Transport (\%):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[max:Transport (\%):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[none:Transport (\%):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Median (℃):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Transport (\%):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Co2ByCountry'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Co2 emission by Country Vs Population (till 2017)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='annual-co-emissions-by-region' name='federated.04ydhyd05agkc911xtzw60l7xqbk' />
          </datasources>
          <datasource-dependencies datasource='federated.04ydhyd05agkc911xtzw60l7xqbk'>
            <column datatype='real' name='[Annual CO₂ emissions (tonnes )]' role='measure' type='quantitative' />
            <column caption='SUM([Annual CO₂ emissions (tonnes )])/100' datatype='real' name='[Calculation_1118863065958182918]' role='measure' type='quantitative' user:unnamed='Co2ByCountry'>
              <calculation class='tableau' formula='SUM([Annual CO₂ emissions (tonnes )])/100' />
            </column>
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total population (Gapminder)]' role='measure' type='quantitative' />
            <column-instance column='[Total population (Gapminder)]' derivation='Max' name='[max:Total population (Gapminder):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Annual CO₂ emissions (tonnes )]' derivation='Sum' name='[sum:Annual CO₂ emissions (tonnes ):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1118863065958182918]' derivation='User' name='[usr:Calculation_1118863065958182918:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04ydhyd05agkc911xtzw60l7xqbk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[usr:Calculation_1118863065958182918:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[max:Total population (Gapminder):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.04ydhyd05agkc911xtzw60l7xqbk].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[usr:Calculation_1118863065958182918:qk]&quot;</bucket>
              <bucket>&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[max:Total population (Gapminder):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.04ydhyd05agkc911xtzw60l7xqbk].[none:Entity:nk]'>
            <groupfilter count='11' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Annual CO₂ emissions (tonnes )])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Entity:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.04ydhyd05agkc911xtzw60l7xqbk].[none:Entity:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.04ydhyd05agkc911xtzw60l7xqbk].[usr:Calculation_1118863065958182918:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.04ydhyd05agkc911xtzw60l7xqbk].[none:Entity:nk]</column>
            <column>[federated.04ydhyd05agkc911xtzw60l7xqbk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.04ydhyd05agkc911xtzw60l7xqbk].[none:Entity:nk]' value='0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Annual CO₂ emissions (tonnes ):qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='1' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#f2f2f234' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Annual CO₂ emissions (tonnes ):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04ydhyd05agkc911xtzw60l7xqbk].[Multiple Values]</rows>
        <cols>([federated.04ydhyd05agkc911xtzw60l7xqbk].[none:Entity:nk] / [federated.04ydhyd05agkc911xtzw60l7xqbk].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{DE7A383A-E3D4-4459-A32C-575AAE88D862}' />
    </worksheet>
    <worksheet name='Co2byCapita'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Co2 emission per Capita (till 2017)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='annual-co-emissions-by-region' name='federated.04ydhyd05agkc911xtzw60l7xqbk' />
          </datasources>
          <datasource-dependencies datasource='federated.04ydhyd05agkc911xtzw60l7xqbk'>
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='real' name='[Per capita CO₂ emissions (tonnes per capita)]' role='measure' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Per capita CO₂ emissions (tonnes per capita)]' derivation='Sum' name='[sum:Per capita CO₂ emissions (tonnes per capita):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04ydhyd05agkc911xtzw60l7xqbk].[none:Entity:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Per capita CO₂ emissions (tonnes per capita)])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Entity:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.04ydhyd05agkc911xtzw60l7xqbk].[none:Entity:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Per capita CO₂ emissions (tonnes per capita):qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.04ydhyd05agkc911xtzw60l7xqbk].[none:Entity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Per capita CO₂ emissions (tonnes per capita):qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#f2f2f234' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Per capita CO₂ emissions (tonnes per capita):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04ydhyd05agkc911xtzw60l7xqbk].[none:Entity:nk]</rows>
        <cols>[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Per capita CO₂ emissions (tonnes per capita):qk]</cols>
      </table>
      <simple-id uuid='{50783694-5E37-4FAC-9D35-3CCDC0496366}' />
    </worksheet>
    <worksheet name='Co2bySector'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Co2 emission by Sector (1960 - 2015)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='annual-co-emissions-by-region' name='federated.04ydhyd05agkc911xtzw60l7xqbk' />
          </datasources>
          <datasource-dependencies datasource='federated.04ydhyd05agkc911xtzw60l7xqbk'>
            <column datatype='real' name='[Electricity and heat production (%)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='real' name='[Manufacturing industries &amp; construction (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Other sectors (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Residential buildings &amp; commercial and public services (%)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Transport (%)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='measure' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Electricity and heat production (%)]' derivation='Sum' name='[sum:Electricity and heat production (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Manufacturing industries &amp; construction (%)]' derivation='Sum' name='[sum:Manufacturing industries &amp; construction (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Other sectors (%)]' derivation='Sum' name='[sum:Other sectors (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Residential buildings &amp; commercial and public services (%)]' derivation='Sum' name='[sum:Residential buildings &amp; commercial and public services (%):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Transport (%)]' derivation='Sum' name='[sum:Transport (%):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04ydhyd05agkc911xtzw60l7xqbk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Electricity and heat production (\%):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Manufacturing industries &amp; construction (\%):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Other sectors (\%):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Residential buildings &amp; commercial and public services (\%):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Transport (\%):qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.04ydhyd05agkc911xtzw60l7xqbk].[none:Entity:nk]'>
            <groupfilter function='member' level='[none:Entity:nk]' member='&quot;World&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04ydhyd05agkc911xtzw60l7xqbk].[none:Entity:nk]</column>
            <column>[federated.04ydhyd05agkc911xtzw60l7xqbk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#f2f2f2' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-color' scope='rows' value='#f2f2f244' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04ydhyd05agkc911xtzw60l7xqbk].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04ydhyd05agkc911xtzw60l7xqbk].[Multiple Values]</rows>
        <cols>[federated.04ydhyd05agkc911xtzw60l7xqbk].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{9D6F7519-FF32-4A9F-B4B9-FB1C4AD80CDD}' />
    </worksheet>
    <worksheet name='Co2bySource'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Co2 emission by Source (till 2017)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='annual-co-emissions-by-region' name='federated.04ydhyd05agkc911xtzw60l7xqbk' />
          </datasources>
          <datasource-dependencies datasource='federated.04ydhyd05agkc911xtzw60l7xqbk'>
            <column datatype='integer' name='[Cement (tonnes)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Coal (tonnes)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Flaring (tonnes)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Gas (tonnes)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Oil (tonnes)]' role='measure' type='quantitative' />
            <column-instance column='[Cement (tonnes)]' derivation='Sum' name='[sum:Cement (tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Coal (tonnes)]' derivation='Sum' name='[sum:Coal (tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Flaring (tonnes)]' derivation='Sum' name='[sum:Flaring (tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gas (tonnes)]' derivation='Sum' name='[sum:Gas (tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Oil (tonnes)]' derivation='Sum' name='[sum:Oil (tonnes):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04ydhyd05agkc911xtzw60l7xqbk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Cement (tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Coal (tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Flaring (tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Gas (tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Oil (tonnes):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.04ydhyd05agkc911xtzw60l7xqbk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' value='#f2f2f234' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04ydhyd05agkc911xtzw60l7xqbk].[Multiple Values]</rows>
        <cols>[federated.04ydhyd05agkc911xtzw60l7xqbk].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{A96A2280-E045-4AB2-86C4-F08F1ACACA35}' />
    </worksheet>
    <worksheet name='GGbySector'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Greenhouse Gas emisison by Sector (till 2014)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='annual-co-emissions-by-region' name='federated.04ydhyd05agkc911xtzw60l7xqbk' />
          </datasources>
          <datasource-dependencies datasource='federated.04ydhyd05agkc911xtzw60l7xqbk'>
            <column datatype='real' name='[Agriculture (tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Energy (tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Forestry (tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Industry (tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Land use sources (tonnes)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Oil (tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Residential &amp; commercial (tonnes)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Transport (tonnes)]' role='measure' type='quantitative' />
            <column-instance column='[Agriculture (tonnes)]' derivation='Sum' name='[sum:Agriculture (tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Energy (tonnes)]' derivation='Sum' name='[sum:Energy (tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forestry (tonnes)]' derivation='Sum' name='[sum:Forestry (tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Industry (tonnes)]' derivation='Sum' name='[sum:Industry (tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Land use sources (tonnes)]' derivation='Sum' name='[sum:Land use sources (tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Oil (tonnes)]' derivation='Sum' name='[sum:Oil (tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Residential &amp; commercial (tonnes)]' derivation='Sum' name='[sum:Residential &amp; commercial (tonnes):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Transport (tonnes)]' derivation='Sum' name='[sum:Transport (tonnes):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04ydhyd05agkc911xtzw60l7xqbk].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Agriculture (tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Energy (tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Forestry (tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Industry (tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Land use sources (tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Oil (tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Residential &amp; commercial (tonnes):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Transport (tonnes):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.04ydhyd05agkc911xtzw60l7xqbk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.04ydhyd05agkc911xtzw60l7xqbk].[:Measure Names]' value='74' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#f2f2f234' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04ydhyd05agkc911xtzw60l7xqbk].[Multiple Values]</rows>
        <cols>[federated.04ydhyd05agkc911xtzw60l7xqbk].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{771D41EF-62E7-412C-8982-1DD68BBB6D4F}' />
    </worksheet>
    <worksheet name='Top15veh-pollution'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Transportation Pollution by Top 15 Countries </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='annual-co-emissions-by-region' name='federated.04ydhyd05agkc911xtzw60l7xqbk' />
          </datasources>
          <datasource-dependencies datasource='federated.04ydhyd05agkc911xtzw60l7xqbk'>
            <column datatype='string' name='[Entity]' role='dimension' type='nominal' />
            <column datatype='real' name='[Transport (tonnes)]' role='measure' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Transport (tonnes)]' derivation='Sum' name='[sum:Transport (tonnes):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04ydhyd05agkc911xtzw60l7xqbk].[none:Entity:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Transport (tonnes)])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter from='&quot;Albania&quot;' function='range' level='[none:Entity:nk]' to='&quot;American Samoa&quot;' />
                  <groupfilter from='&quot;Americas (other)&quot;' function='range' level='[none:Entity:nk]' to='&quot;Anguilla&quot;' />
                  <groupfilter from='&quot;Antarctic Fisheries&quot;' function='range' level='[none:Entity:nk]' to='&quot;Aruba&quot;' />
                  <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Asia and Pacific (other)&quot;' />
                  <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Australia&quot;' />
                  <groupfilter from='&quot;Austria&quot;' function='range' level='[none:Entity:nk]' to='&quot;Central African Republic&quot;' />
                  <groupfilter from='&quot;Central Asia&quot;' function='range' level='[none:Entity:nk]' to='&quot;China, Macao SAR&quot;' />
                  <groupfilter from='&quot;China, Taiwan Province of&quot;' function='range' level='[none:Entity:nk]' to='&quot;Eastern Africa&quot;' />
                  <groupfilter from='&quot;Ecuador&quot;' function='range' level='[none:Entity:nk]' to='&quot;Euro area&quot;' />
                  <groupfilter from='&quot;Europe (other)&quot;' function='range' level='[none:Entity:nk]' to='&quot;Europe &amp; Central Asia (IDA &amp; IBRD)&quot;' />
                  <groupfilter from='&quot;Faeroe Islands&quot;' function='range' level='[none:Entity:nk]' to='&quot;Kyrgyzstan&quot;' />
                  <groupfilter from='&quot;Laos&quot;' function='range' level='[none:Entity:nk]' to='&quot;Low income&quot;' />
                  <groupfilter from='&quot;Lower middle income&quot;' function='range' level='[none:Entity:nk]' to='&quot;Nepal&quot;' />
                  <groupfilter from='&quot;Netherlands&quot;' function='range' level='[none:Entity:nk]' to='&quot;Niue&quot;' />
                  <groupfilter from='&quot;Norfolk Island&quot;' function='range' level='[none:Entity:nk]' to='&quot;North Korea&quot;' />
                  <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Northern Mariana Islands&quot;' />
                  <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Norway&quot;' />
                  <groupfilter from='&quot;OECD members&quot;' function='range' level='[none:Entity:nk]' to='&quot;South Africa&quot;' />
                  <groupfilter from='&quot;South Asia&quot;' function='range' level='[none:Entity:nk]' to='&quot;South Sudan&quot;' />
                  <groupfilter from='&quot;Spain&quot;' function='range' level='[none:Entity:nk]' to='&quot;Uruguay&quot;' />
                  <groupfilter from='&quot;Uzbekistan&quot;' function='range' level='[none:Entity:nk]' to='&quot;Western Africa&quot;' />
                  <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Western Sahara&quot;' />
                  <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:Entity:nk]' to='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.04ydhyd05agkc911xtzw60l7xqbk].[none:Entity:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Transport (tonnes):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.04ydhyd05agkc911xtzw60l7xqbk].[none:Entity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Transport (tonnes):qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' value='#f2f2f234' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Transport (tonnes):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Transport (tonnes):qk]</rows>
        <cols>[federated.04ydhyd05agkc911xtzw60l7xqbk].[none:Entity:nk]</cols>
      </table>
      <simple-id uuid='{AA7B1747-C8D4-4E9E-8ABE-DC20663A7B05}' />
    </worksheet>
    <worksheet name='ppmLongTerm'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff'>Co2 concentration (ppm) in Atmosphere </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='annual-co-emissions-by-region' name='federated.04ydhyd05agkc911xtzw60l7xqbk' />
          </datasources>
          <datasource-dependencies datasource='federated.04ydhyd05agkc911xtzw60l7xqbk'>
            <column datatype='real' name='[CO₂ concentration (parts per million)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Year]' role='measure' type='quantitative' />
            <column-instance column='[Year]' derivation='Attribute' name='[attr:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='None' name='[none:Year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CO₂ concentration (parts per million)]' derivation='Sum' name='[sum:CO₂ concentration (parts per million):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.04ydhyd05agkc911xtzw60l7xqbk].[attr:Year:qk]' included-values='in-range'>
            <min>-803719</min>
            <max>2019</max>
          </filter>
          <slices>
            <column>[federated.04ydhyd05agkc911xtzw60l7xqbk].[attr:Year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:CO₂ concentration (parts per million):qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-color' value='#f2f2f234' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:CO₂ concentration (parts per million):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:CO₂ concentration (parts per million):qk]</rows>
        <cols>[federated.04ydhyd05agkc911xtzw60l7xqbk].[none:Year:qk]</cols>
      </table>
      <simple-id uuid='{BAAD6EFC-853E-4150-B001-D9F757FC5814}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='emisison3'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='11' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='8' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='3' type='layout-basic' w='98400' x='800' y='1000'>
                  <zone h='42750' id='1' name='Co2byCapita' w='98400' x='800' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='55250' id='6' name='Top15veh-pollution' w='49200' x='800' y='43750'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='55250' id='9' name='ppmLongTerm' w='49200' x='50000' y='43750'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#000000' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='14' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='42750' id='1' is-fixed='true' name='Co2byCapita' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='55250' id='6' is-fixed='true' name='Top15veh-pollution' w='49200' x='800' y='43750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='55250' id='9' is-fixed='true' name='ppmLongTerm' w='49200' x='50000' y='43750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D145FD04-7513-4985-B0FA-03A9D40D5E52}' />
    </dashboard>
    <dashboard name='emission1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='3' name='Co2ByCountry' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#000000' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='14' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Co2ByCountry' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{108A0FA3-8D84-409F-974D-3954520BE57B}' />
    </dashboard>
    <dashboard name='emission2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='6' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='4' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='37375' id='1' name='Co2bySource' w='43400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='60625' id='3' name='Co2bySector' w='98400' x='800' y='38375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37375' id='8' name='GGbySector' w='55000' x='44200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#000000' />
          </zone-style>
        </zone>
        <zone h='17875' id='7' name='Co2bySector' pane-specification-id='3' param='[federated.04ydhyd05agkc911xtzw60l7xqbk].[:Measure Names]' type='color' w='37100' x='8800' y='45625' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='12' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='11' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='37375' id='1' is-fixed='true' name='Co2bySource' w='43400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37375' id='8' is-fixed='true' name='GGbySector' w='55000' x='44200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='60625' id='3' is-fixed='true' name='Co2bySector' w='98400' x='800' y='38375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17875' id='7' name='Co2bySector' pane-specification-id='3' param='[federated.04ydhyd05agkc911xtzw60l7xqbk].[:Measure Names]' type='color' w='37100' x='8800' y='45625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{10E0A9AB-D11A-42FC-8B59-96FD10F13859}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Co2ByCountry'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Annual CO₂ emissions (tonnes ):qk]' type='color' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04ydhyd05agkc911xtzw60l7xqbk].[none:Entity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{70318ACB-EEF9-4F43-8CE6-A55DFB507F3E}' />
    </window>
    <window class='worksheet' name='Co2bySector'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.04ydhyd05agkc911xtzw60l7xqbk].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04ydhyd05agkc911xtzw60l7xqbk].[:Measure Names]</field>
            <field>[federated.04ydhyd05agkc911xtzw60l7xqbk].[none:Entity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CE6EE84-8216-4179-ADBA-D09657A2AC8D}' />
    </window>
    <window class='worksheet' name='Co2bySource'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F596449C-1614-4A9A-AC40-EB11CFC41B6A}' />
    </window>
    <window class='worksheet' name='Co2byCapita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Per capita CO₂ emissions (tonnes per capita):qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04ydhyd05agkc911xtzw60l7xqbk].[none:Entity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{72499337-63BD-4BBE-8C97-65AD65328342}' />
    </window>
    <window class='worksheet' name='ppmLongTerm'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:CO₂ concentration (parts per million):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{29E43215-0FE2-4508-9496-9983CDC70A56}' />
    </window>
    <window class='worksheet' name='GGbySector'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2C0DD8C8-AFB9-4818-8FA1-B24E21E2B3F3}' />
    </window>
    <window class='worksheet' name='Top15veh-pollution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[federated.04ydhyd05agkc911xtzw60l7xqbk].[sum:Transport (tonnes):qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04ydhyd05agkc911xtzw60l7xqbk].[:Measure Names]</field>
            <field>[federated.04ydhyd05agkc911xtzw60l7xqbk].[none:Entity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9225D7D7-2FD0-41B7-B35B-446AEFCF8F66}' />
    </window>
    <window class='dashboard' name='emission1'>
      <viewpoints>
        <viewpoint name='Co2ByCountry'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{262A6136-08B0-4F79-9A8D-C3BA9A1C62E3}' />
    </window>
    <window class='dashboard' name='emission2'>
      <viewpoints>
        <viewpoint name='Co2bySector'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.04ydhyd05agkc911xtzw60l7xqbk].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Co2bySource'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GGbySector'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{4F712170-CDEE-41DA-A977-6C1B5090388C}' />
    </window>
    <window class='dashboard' maximized='true' name='emisison3'>
      <viewpoints>
        <viewpoint name='Co2byCapita' />
        <viewpoint name='Top15veh-pollution'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='ppmLongTerm'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6B9FD5B8-45E7-4DC1-B5F9-9A00C991BB5D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Co2ByCountry' width='192'>
      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
      lgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Co2byCapita' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Co2bySector' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Co2bySource' width='192'>
      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
      6wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='GGbySector' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top15veh-pollution' width='192'>
      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
      C7UsK8cBJcbTAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='emisison3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29eXhU5dn4/5kts2TfM5nsKwSSEBIIWyAQEEEECorWrba2Vu3P9vVVv7Za
      FWtd2mq11VbbYmurXdz6FtAqsggKIghkgex7SJjs62SSzHZ+f8SMhJkJCYQkkPO5rrmSee77
      POc+c859nud+VokgCAIiItMU6WQbICIymciH/pFIJJNph4jIpCCWACLTGtEBRKY109IB1Go1
      bm5u45afRCLB09Nz3PITmTiGOUBgYCBPP/003/72t4cp3XXXXTz//PPExsaeN8NNmza5fLhu
      vPHGizB1ZBvPPU9QUJBLex955BECAwOJjY0lLCyMJUuWcO+99xIVFcW1114LwA033MDzzz9P
      RkYGq1at4vnnnycqKoq4uDgeeOABAB588EGeffZZbr75Zn7yk58gl8udnk9k6jLsjj344IP8
      6le/or29nVtuuYXU1FT+9Kc/8cEHHxAbG8uKFSuorKzklltuYebMmbz00ks8/PDDSCQSWlpa
      qKqqAsDT05MHH3yQ/Px8uru7SU9P55133kGhUDBv3jyuv/56Dh48SHBwMOHh4Rw7dowdO3bw
      3e9+1/7dZrOxcOFC/v73v5OTk4OnpyfPPPPMMBvXrFnD8uXLeeutt1i/fj0eHh688soryOVy
      tmzZwoIFC/jtb3/L2rVraW9v57e//S1RUVHU1dXxjW98gwULFvDyyy+jUCgICwtDpVLh7+8P
      wOHDhzl69Cjf+c538PX15cc//jE//elP+eCDD4iOjgbgV7/6FVu2bKGrq4vdu3ezYsUKPv74
      4wm+hSIXw7ASQK1W09LSgtVqZd68eTz22GPcdtttpKenk5OTw1/+8hdg8O04MDDAihUrMBqN
      lJeXs23bNpKTk5k9ezYqlQpvb28MBgO+vr64ublhMBiYPXs2N910Ew899BDZ2dnExsby2GOP
      sWTJEgDi4uJ4/PHHyc7O5qabbqKlpYX169eTlZXFCy+84GCjIAi0tLSwevVqlEolzz33HBs3
      biQ5OZkjR47w73//m9OnT2MwGMjKygIgOjqaiooKu7yzs5PIyEiHH0an03Hffffxi1/8ArPZ
      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
      iYSgoCBqa2u54447OHz4MHFxcbi7u6NUKu3PryAIpKenD+8JfvPNN0lPT2f79u3s2rWLd955
      h5KSEnJycpg/fz7Z2dl8+eWX6HQ67rnnHl5//XUyMjIICAggIyODPXv2IJFIuOOOO6ivrycw
      MJCysjJCQ0Px8vJi8eLFbNq0iccffxytVmufsLFs2TK++OILfvKTnxAbG8uhQ4fIysri5Zdf
      xmw2c/LkSdavX88TTzxh1zub++67jxdffJHbb7+dkJAQgoKCWLRoET09PSxatIjY2Fj+8pe/
      8I1vfIPg4GBuvvlmYHAcy1NPPcW7774LwNKlS/nf//1ftm/fTnZ2Nm+++Sa/+MUv7OeMjo7m
      448/ZvXq1Tz99NNs376dJUuWAINvqPDwcEpKSgBYsmQJP/zhDwGG5eHp6cmLL77I9ddfT1pa
      GocOHWLt2rV2u2+++WZ6enpoamqio6OD73//+1itVo4cOUJqairvvPOOywk5Y+Fs+/74xz/y
      6aefkpaWxq9//WueeeYZduzYAcAvf/lLPvroI+688076+/vt9/bMmTOkpaVRX19PVVUVfn5+
      ZGdnExQUxP79+9HpdMTHx7Nnzx5CQ0OJiIjg1Vdf5cc//jFxcXFcd911vPTSS/bnIDMzk1mz
      ZlFUVMTmzZtxc3Pj8OHD3HLLLTz88MOkpaXx3nvv8dprr9nvQWxsrP3/uLg4ioqKiIyMxNvb
      m9tuuw0/Pz8AwsPD6e/v56mnnrI/v++//z5r1651HQPk5uaybds2NmzYQGlpqX0L0927d6PR
      aPjNb37D5s2bUSqV9kVvQ0ND+fDDDxkYGFzP59FHH+XIkSMUFxfj6+tLdHQ0PT09lJeXU1NT
      Y19Ey83NjQ8//BAvLy+ampr497//jUajsT9Y/f39PPDAA8P0zkYmk6FWq+np6aG+vp4jR44A
      g1MU9+zZQ3d3N3K5nH379g1buOvw4cOcOXOGvXv3cuONNzqd+XT2OVtaWvj444/ttp3NP//5
      Tx577DGuu+46YHCGUmxsLF5eXsPyGLIVsF+r1Wq12200GnnkkUcwmUx4enoSHR1NaWkpeXl5
      9hfBeHC2fX19fezevZuQkBCee+45XnjhBfLz84HBmV8ffvghAQEBw+7tO++8Q19fH35+fnz4
      4YeYzWYiIiIoKipCLpfzwQcf0NbWZh9e0d7ezr/+9S8KCwvJzMzk9OnT6PV6ampq7FNGPTw8
      +O9//4tGo6Gvr49//etfw8b/AMPuwdn/Nzc3s2vXLg4fPmxft+pczn5+YXBKrdM5wZWVlQBU
      VVWh0WjQarUcPXqUuro6qqqqMBgMLFy4kOrqagwGAxs2bOA///kP77//PnfffTd79uyhurqa
      2tpaWlpaWLdunX0mUGlpKfv372f+/PkYDAb0ej2HDx/mzjvvZNu2bXR0dFBdXY3FYuH06dOY
      zWb27duHxWJBr9cP06uqqsJoNNLR0UFWVhaff/45VVVVLF++nNzcXD7++GNuvPFGcnNzOXXq
      lH1v4qqqKiQSCdnZ2Zw8eZL8/HwWLVrEK6+8Mqx6UVlZOeyc11xzDbGxsbzyyiv09vayceNG
      fHx8SEhIQKFQcNttt/GnP/2JlpYWjh49yu23305AQAB79uyx59HX12e3tb6+3n6tFRUVLF++
      nLy8PKqqqhAEgdLSUkwmE76+vlRXVzN//nz27t074iy20XK2fceOHWPz5s38/ve/t09xtFqt
      1NXV0d7ezi233MJf//pXvvvd79rvbV1dHVarlZ07d3LXXXdx5MgR3NzckEgkHD58mKamJnp7
      ezl27Bjr1q2jpqaG5uZmqqurmT17Ng0NDezfv5/U1FR7iffRRx/xwx/+kH/84x80Njba5yFX
      VVURFBSEXC4nJyfHfg82btxo/99gMNifzebmZrq6ukhKSuLQoUMIgkBHRwednZ12ne7u7kFH
      udixQMnJyUJQUNCkj3+5mE9UVJRw9dVXn1cvJydn0m2drh+pVCrccMMNw+7BSPdj3bp1gqen
      53nzFccCiUxrxH4AkWmN6AAiY+LsWVpnMxTYj5apoi86wFksW7bM3unm4+PDzJkz8ff3n2Sr
      phauOvbOba05H1NFX5wR9hUymYyHHnqIbdu2kZmZiUwmo729HS8vLwoLC5FIJOzYscPlKnIi
      lydiCXAWNpsNPz8/Ojo6aG1tJSwsjNLSUkpKStiwYYP48F+BiCXAV1itVtatW+dUFhISMi4r
      EIhMPcbNAZKTkzl58uR4ZTelaGxsdLq46pXMgw8+yNGjR4mNjUWv1+Pu7m4fMnIlMW4OcKGj
      HkWmHkOrbttsNk6fPm1fozUiIoKUlBRyc3MdjhkaeTlapoq+WAUScaCgoIBHH30UiURCXFyc
      vQSoq6ujoKDA5eZzU2HTu7Hqj6sD3KAOd0jbN9BMi03c7O5yo7S0FMA+uvVK5ZI7wClzl+gA
      IlMWsRlUZFojOoDItEZ0AJFpjegAItMa0QFEpjWiA4hMa0bdDOru7s6mTZswmUz4+flx+vRp
      dDodf/jDHy6lfSKXmJCQEFauXAlAYWGh017eK5lRO0Bvb699H9nDhw+TmJhIUFAQ/v7+JCUl
      fTUBwbHnTa1W4yHYxtNmkYvg3N7R3t5empqaiIiIsC+GMJ0YtQP4+/vT2dnJ8ePH7VvrRERE
      0NbWxmeffUZWVpbT4/r6+jBYxtaFLTJx9PT02FfA6+7unmRrJp5RO0BbWxtvvfUWAMeOHQPg
      yy+/vDRWiUwoPT09xMXFIZPJ7NsQTRfEIFiEjo4Ouru7sdmmX1XVqQNs2bKFmTNnTrQtIpNA
      eHg4s2bNQqfTTbYpk4JTB5DJZNx7772iE0wDpFIpWq0WqXR6VgZcXrVMJuPJJ59k4cKFE2mP
      yAQjCAKtra2Tbcak4TQIzsvLo6ysDIDi4uIJNUhkYmloaKCyspKvFggEBpuu5wAOm+UAABY9
      SURBVM+fT15eHpGRkbS0tKBWq+1rdV5JOHWA4uJiMjMz8fHxmXatAtMNq9VKTEwMRqPR7gSC
      IJCVlcWcOXPo6OiwPwMWi2V6TImMj4/HZrMxMDDAnDlz7MuNi1yZ6PV6vL297d/9/PwwGo2o
      VCqCg4NpampCrVZPnymR5eXl3HHHHSxZsoQ777xzTCcVufwoLCykqKjI/v3MmTO89NJLmM1m
      ZDIZNpvtil082WUQXFdXx6lTp6Zl2/B0IyEhgbvuumtYmtlsBgarSIIgXLHPgUsHMJlMqNVq
      MQaYBnh5ebFgwYIxr795JeDSAebMmTPmOpfI5UlTUxPt7e3T7mUX5qVy7QCnT58mNjb2iq37
      iXxNUlISSqWStLS0i8pHKZcyR+t8O9Kphr9GwY5vZboeDBcTE+PQPixyZbJt2zbUavVFb786
      K8iTHy2J4VtvT/05BZE+GuQyiesSoKCgwOluiCJXHsuXL+fZZ5+9aAfwUMlZEuc3TlYNovNW
      cfNc55uhXwwapYx3C8+4doCAgABkMhly+WAhIZVKWbJkCd7e3qSnpxMREcGcOXPG3TCRicdk
      MrF9+/aLLu091XJC/dTcuzR6nCyD+7Jjeebar8ekeavkxAZo+NZ8x0XYzsXf3c2lTOMmo89i
      c14FkslkxMTEYLFY7D+Km5sbQUFBPPTQQ+Tn57Nw4UIiIiKoqakhOTlZnBF2mXBuw4ZcLuea
      a64hLy/vooNgjVLG+8VNrEsJ4aVPqy8qLwC1QsbiOD8KmrrxVMnZlBTOzBAP7s+JY8BsY3ao
      Fw/+p9Cur5RL0bjJ6DAONuHu+P58Fv/6oNO8w/3U1HX1OXeA2NhYTp48SWFhIfPnz+fw4cO4
      u7uzfPlyjh07RnR0NG1tbVgsFgwGgzgj7DLGYrFQVFSEQqG46LxUbjLeL2rkp2sSWZcczPsn
      m1zqusmkrEsO4f2Trped35Aawo7CRjyUcmZpPflGmhaFXMpfj55GpZByz/LoYQ5wz7Jovjkv
      jPnPHsBDKSclwhuZVMJzm2dx3zunhuUd4qPiUGW7cwcoKyvDw8ODiIgIPvvsM2BwRti9994L
      MC1nDl3JnDlzhuXLlyORSC6qGqSQSei32ChuMRDio3KptyTen4fWzmBJrA8B//NfrDbn51w5
      O4hnPigjLcKbOWGexGg9MFlsbP2ghOWJgdy4UIZSLmXAMljDuCY1BEEGT22ayaEaIyq1nNWz
      grgzO9rBATzUcgwmi/MYQCqVkpGRQVxcnNMeQPHhv7Kora2lubn5ojvCvD3c6Owz8/rndaxJ
      C0Ht5jy/RzfOIDnCg6LmHlYnBxEd6LyxJTJIQ2VLLwfKWvl/18QyM8KTYH8VJqtAe58JQT4Y
      eMOg8/XarLy4t5K7V8by5KYE3slt4J6V0ShUUpTy4Y+6Wi3HaLY6dwBBEAgJCaG4uFh82KcB
      ixYtwsfHBzc310HjaAgP1NDZb6as2cC6DC2LExx32EzQehDoq2TbwdP8J0/PQ+sTWTsnxHmG
      ssE+qJYeE91mC4Jcgr+PG70DFoobexAUErsDxAZ7oO/u559f1LPl90cw28y8ur+GVWkh1Pf0
      46UZXtnx9XKjp89FCSAIAidOnGDTpk0X83uIXAZERkaSl5fHsWPH2Lhx40XlFR6kpvSMgfJG
      A8gl/PXeDAed+69N4HhtJy/uruNUQw/zZ/ih9XdeXZIqvu6ErWwzUtHai1wlw2iy8nlZO6/s
      q+LaDC0AqVHe5NZ1AbDnVAvf+G0un5a0cqann+beATRuwx1gyawADAMuHAAGfxij0WhvBhW5
      MtHr9YSGhqJQKNi3b99F5aUL0tDea2LAbOPVvVX4+ylRyAcf4iUz/UkK92JpSiBb3xmcZHWw
      pJWChm42LHScj6yQS+g7q/rdPmDjn4dPI8glGAYsAOw4ricxfHD7phuXhrPjuN6u39M/WHPZ
      U9hMXWc/Srfhj7pFAt2uSgCAyspKurq6sFgsF/RjiFwemEwmJBIJarX6ojYClMskaDwUDMXQ
      v/uoiuq2PnT+GoJ9lPzn8Sx+c3caUWEedPcNNlP29FlY8vAndA44VrO91Aq6TV+nP7ejij/s
      qqZPsNHTN/hMflbcyoxobx6+YSYaDzf0Hf0O+dz5ygkKG3rQBXwdZ6jdZBQ1GrDaBNdDIQIC
      AvD29mbZsmUcOHDgwn4VkcuC/v7+YRNiYLAhxGaz2Vv8hr47I07nwbWLwjlZ32NPK2vo4W/7
      64jWuqNv68MqhU8LW1mSEoSh38LQhC2zRaDbZEUmlQxrDfL1dKP7LMcobTBgMAwMO4fZIjAj
      2pslqUHkVnQ4tU0QoHvAwr8eXcRz75SgUcpp6eofrKYxwsJYer2e+fPnc+jQIVcqIlcIAQEB
      REZGIpfLsVgs+Pn58d3vfher1YpEIrHPCPvjH//o9PhAHxW3rY7kk9zh7f6n24wsSwtm7/FG
      frujnFd3lnPfjTM5t6W1tddEgLcSmyDQaTBjttjITgumqdvxjX7NI8NfxscrOwn2UyHIXK9q
      caCgmYdumcXj307BOGCl6oyBm34++Fy7dABPT0/OnDkjtgJd4Wg0Gtra2oiMjLRXdyUSCX19
      fXR0dNhnhBmNRpfbpJ6q66empZ+8KgMeHh729OpmExuyA8it6sUiUWBBSZ9VwMPDY9ic3TOd
      ZjJmhXLVvCAkUhn/2lvHlqti2fraSXt+Q/oCcNYpuOXZE6yYG8jdG2KHnfvs/Mv0Zg4WtbNm
      gZZfvVHI6eZeWnrAw8PDtQPExcXR398vjga9wpHJZEilUiorK+3VHYvFQkFBARUVFfj7+9PS
      0oJGoxlxTvCtT33pkP55gYFf/n+phAYo6DQY6eruoc1osesN/T2Qp+fpe+aSGDE4lPqO9dHs
      O67n8wL9sPxczU9paFZS02xwkJ/9vbKxh+pmb377bjEDpq+rci4d4NSpU2RnZ19076DI1Kav
      r4+0tDQaGhrspX1XV5c97mtoaLjgvAUB3jtwmqd/OI+7n/4cgDt+7lilrmroITHGF7NN4HB+
      E+8fOM07e0c/liivvJ0n/1wwos5zbxTy2B9yhz38MIIDmM1m1Go1MplMbAm6grFYLOj1erZs
      2cKf//zncb/Xv37zFA2tRj75cvBt/mWR4yJcnQYzgkLGz14+xq//dnLM57BaBc60GEfUael0
      jCdgBAdISkpi//794sM/DaipqeHJJ5+8ZPf6rY9GXlCrpaOPfiu89I/CEfUuBU5DZz8/P3Jz
      c8nLy5toe0QmAaVSydy5cydt+qsgwL1PHcRsmfhh804dwN3dnTVr1rBs2bKJtkdkgpHL5axZ
      swZ3d/dJXSD3n++XT8p5nVaBTp8+zSOPPDLRtohMAhaLhU8++QRPT89p2eQ96oE+crmcu+66
      i88//5zMzExxk7wrCKPRiKen52SbMSmM2gGGWgvi4uKoqqoSN8m7THHWlu7n50dWVhZ/+ctf
      pl0pMGoHUKvVqFQqysvLiYyMFDfJu4Kor6/nyJEjV+zyhyMxagfo6+vj73//OwBHjx4FxE3y
      rhTc3d1RqVxPYbySmZ774ogMw8/Pj66urmnZ4y86gAjNzc0EBQVNthmTgugAIsTGxuLl5TUt
      Z/9NvysWceDkyZMYDAYxCL6U7PvpjxzS7nvjXfJrL3y0ocj4oFar8fT0nJYxwIQ5QHZSgkOa
      j7j47pTgww8/pLm5mZCQEPR6/fkPuIKYElWgfVsfdEi77/V/kV9zehKsmX4EBQURHByMh4cH
      er0epVLJqlWrKCkpITExkcbGRjQajX2VwCuJKeEA2bMSHdLE0mFiCAkJ4dZbb8XDw4Mnn3wS
      AJvNhru7O3PnzgUGg2TA5ZRImDrbno5Vf0o4wEh88vOfOKT9z2t/J7+6bhKsufJoa2tjYGCA
      7u5u+3wAjUZDaGgoVVVVBAQEoNfrzzslEqbGtqdj1Z/yDpCdPNMhzcd9sHR44Xu3Micmcpjs
      9T2f8te9n06IbVcCwcHBVFVVERoaap8T3NXVxQsvvDDZpk0IU94BRmJOTCTZyUnD0vafHFx1
      7JNnHyM7Zbhs69/f5Ym/v0tqTBQ+HsOrWDVNLdQ2tRAZHEhUcNA5smZqm1ouwRVMPvX19SxY
      sIDa2tppNxAOLnMHuFBevOt2slNmDUvb+ubbPPHmO9y+ajlbb90yXPbG2zzx5tt88ssnyE6d
      5VT2wl3fZk5s1DDZ6x9/wl937x9R5szhOnt7ya+suahrHAvvvvvuhJ1rqjFmBwgLC7O/McLC
      wvi///u/S2HXZcec2CiyU2cPS9tfUHhe2e1XrWDrbTcMl+WfYvkDj/Gtq1Zw++oVw2R5FdXc
      98prRAYHERVyjuMYesmvvPidWaYTY3aARYsW0dXVxcKFCwkNDeU///nPtOxAmQiiQoIcHGeI
      26/OYeu3vjksbX/eSZb/7yM8/q1vupSJDGfMDlBRUcGCBQuoqqpiYGAAqVQ6LeuOIlcGY3aA
      EydOcOLECft3b29vUlJSSElJwdfT0RHmGr3ws/Zi9XfcBCE5PQNbQAhWP8eRiMnp6dj8g7D6
      BjjIUuamY/MNxFMXgdVn+CYM4QkzyMrKwlMXjtXbhSw0HKu3n1NZeEKiE1niWXm6kIWGY/Vy
      nudIsvCERKxevsNknqHhg7J4Z7Kwr2WePmOWXYmdWReF8BUMLrt4wZ+srCz7/97e3pe97Fz5
      ZJ7vUsku9j6f/fHw8BhTPlNGf7wc4OwfOjExUUhPT3cqy8nJEebOnetUlp6eLqxYscKpLCUl
      RVi9erVT2dy5cwWtVjvm47RarbB48WJBo9E4yKKiooTly5c7HKfVaoW1a9e6tDMqKkqYNWuW
      y/OtXbtWkMlkDrLQ0FBh48aNLm1Zu3atU5lSqRSuvfZaISoqakyyC/1caQ4wbvMBurq67P+v
      XLnSpSwuLo6oqCinshkzZgwLqM+W+fn52bvmz5UNrW2TlpY2puMiIiJYtmyZfUWEs2WzZw8P
      PodkgiDQ1NTkVAaD6+pnZmayatUqB1lCQgKenp5otVoHWWRkJP7+/vj7+zvIZs6c6fJ3iYiI
      QKFQEB0dPSaZyCCXZEKMr6+vyw3Xenp6qKysdCprbGxEp3PcLickJISenh6OHDni9LigoCBq
      amocxqhotVoiIiKoqKhwaevrr7/udCKIq270xsZGQkNDMZvNDjKlUsmMGTNobGx0uq9CV1cX
      +/btc2g0GOqB1ev1tLW1OcjOTTub7u5ubDYbra2Oa25KpVL6+/tHvP7pziVxgKGltp0x0qSL
      xsZGp5OzGxsbUSgUpKenOz3OaDQ6bYrV6/XU1bkeM9TZ2ckPfvADOjocdxfp6uqyv43PpaKi
      wv5WPZuhMTXJyckOO65IJBKsViubNm2ivb19mEwulzNnzhw8PDzw8vIaJrNarVitVuLi4r5a
      esaRwMBAjEbHxWGDg4Od6ot8zbg7gE6nw9/f3+k6k1qt1umbaojExEQGBgacyhQKhcuSIyws
      jJycHKeykJAQ4uPjncpmzJjBwYMHncqMRiO9vb1OZRkZGQ5VpCGam5v58ssvnTq6j48P9fX1
      DiMVBwYG+OSTT7BYLE4f5La2Nurr652eTxAE5HK509+tvr6eWbNm2Udzijgy7g7Q0NBAYGAg
      fn5+DjK9Xs/s2bNdLsLa2dmJu7s7cXFxDrLg4GCHt+MQxcXFTt/iAIWFhXR3dzuVlZaWotPp
      HEorpVLJhg0bnNoxdL4XX3zRqWzZsmX4+PhgMpmGpQuCQHNzM7GxsU4f1qENSZyt0BwfH49E
      InFaOkqlUvR6Pb6+vg6y/v5+Dh48SG1trVNbRS5RFeijjz6ir6/PIX358uUUFxcTEODYtg+D
      b/KYmBinddbKykqn9W6AlJQUSkpKnMrmzZtHUVGRU5lSqaSnp8fBsQYGBtixYwcWiwWlUulw
      nL+/v8uFgxsbG7FarQ4OAINj1FtbW50+rAaDgfDwcBQKhYOsubmZxMREwsLCHGQWiwWbzea0
      xDEYDCQmJrr83UaLVqslJibmovKYqlySKlBGRoZTB1AoFHR3dztdh9LPz4/e3l6OHz/uNF+J
      ROJy/fr+/n6nVQcYLJFcvclDQ0MxGo0OdXLAXsfPzs4elp6RkUFSUpLLGGfnzp1s377dafWp
      r6/P7gTn0tPTw9GjR+nvd9zIYc2aNdTX19PS4jgiNTExkcDAQKelXHZ2NkajkcjISKe2jpYV
      K1awcOHCi8pjqjLuo0FjYmKorKzEx8fHQfbxxx8TGBjIF1984SBrb2/nvffeIyPDcXfxuLg4
      FixY4LI1pLm5mYIC51vk9Pb2OgSkQ9TU1CCVSp06a01NDd7e3uzfv39YenV1NVqt1umDej6u
      u+46zGYzbm5uDsePtBfDq6++itlsdurkFovFqWMA5OfnExsbS09Pj1P5aJHJZC4D8MudcXeA
      pqamEQNIVzdriGPHjjmkmUwm2traXDZNurm5sWbNGt58881h6cnJyRw/ftxpdQQGB/ZJJBJq
      amoc7NXpdDQ1NTnU19va2ti5c+eI1+CKC119rbOz06WsoqLCZWtPd3c3SqXS5fWPljfeeGPS
      Ns+41Iy7AygUCsLDwy9qc7VzqaurG7E5UyqVkpjoOK+4urqaa665xmUH0GuvveY0XSaT0d3d
      PWzbzfHgvffeQyKRuKyuXQhZWVm4ubk5dSyLxYJUKiU+Pt5ljDQaBEFAEAQiIiLs5zyXlJQU
      l6WwM6aK/rg7QGFhIfPnzwcmZvHcqKgoWlpanFYhDAbDBU32sFqtREREXFA1ZyTG86UwhMEw
      uDdvZGSkQ1Op1WolNDR03O7DSC+i2traEV9SU1X/krQCyeXyCet9lEgkJCQkuGwivVBMJtNl
      sVRgcfHgFFBn6/l85zvfIS4ujvz8/EtybolEgkQiQSaTUVdX57Jh4FzGoi+TyS5p/pfkDtts
      NqdB8KWgurqampqacZ2Uo1QqGRgYcNkpN5Xo7u7GZDIRGRlJVdXw3RhffvllgoOD0el0LjvS
      LoYf/OAHWK1W3NzcsNlsaDQa+vr6kEgk/O1vf3Pom8nKymLp0qX2ZRjPp/+DH/yAsrIykpKS
      RqX//PPP8+6777J06VIUCgVms5mGhgZUKhXbtm1zsP/WW2+9NM2gfn5+4/5GHonxnpE2MDCA
      xWK5LNq+VSoVbm5uDgP0hmhqarokD//ixYuxWCxYrVba29vx8/OjsLAQPz8/goKCHBoVFi9e
      jMlk4r333hu1vkqlIikpaVT6S5Ys4cCBA1xzzTUUFhYSGRlJbW0tnp6eTkuCnJwcIiMjkXw1
      FHrconytVktKSgqNjY2XrOidCGJjYwkLC7PvmD5VCQgIYPHixZSWll5UoHshxMfHY7VaUavV
      NDQ0MHPmTEpKSrDZbEgkEofWq+DgYJqampg1a9ao9HU6HWq1GqVSOSr9xYsXU1BQwOzZs8nP
      zycpKYmamhrkcjlNTU0OL0qZTDb+DgCDdc/jx49f1g6QnJxMQkIC77333mSbMiLLly8nKiqK
      yspKPv1UXA9prFySGKCtre2ynyiflZXltINsqtHT08Pu3btdDj8XGZlxd4C4uDgsFgtxcXFj
      aredSshkMoqKiiZ14+jR4qzjUGT0/P8i8n87oxgIaAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='emission1' width='192'>
      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
      5gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='emission2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2deXhV1bm4373PPJ9MJ/OcEJKQCARQAgElrSjXASoqRa21rV4rWmsdeumA
      U7XDrbfeWqdb+9N622sHK9e2t45UERBkFAgJATKS6WQ4mc487d8fIUcCAZKQBCT7fZ79JOfs
      vb797bXXd9b0rW8JkiRJyMhMUcRzrYCMzLlEOfiPIAjnUg8ZmXOCXAPITGlkA5CZ0kw5A7BY
      LOMqz2g0IopTLhsvGIa8ubi4OJ588kluu+22IRfdeeedPPXUU2RnZ59R4Je+9CXUavWw51at
      WnXatHffffcpz91222389Kc/JS8v74w6nIq0tDRuvvlm5s+fD8Cll15KWload9xxR+TeOp2O
      Rx55hB//+MdotVrWrl3L2rVrAbjuuuv44he/SGZmJk8++SRPP/00JSUlrFmzZsw6nS3XXXcd
      P/7xj1m6dOmo0p0ur8/ERRddxE9+8hO++c1vjlnGiWXhdOXmRE6n+/33389PfvIT4uPjhz0/
      +O4HUTzyyCOPADz66KM88sgjPPXUU2zbto2bbrqJW265hYaGBiorK+no6GDOnDns3r2bm2++
      mRtvvJHKykqefPJJli1bxty5c0lNTUWlUtHY2MjDDz9MXFwc6enpfPnLX6a9vZ3U1FQ0Gg3f
      /va30el0LFq0iOXLl2Mymaiurmb16tWUlpai1+spLy9n//793Hjjjezfv5/vfe97rF27FofD
      wZ133sn111/Pvn37WL58ORaLBUEQuOeeeygsLGTOnDksXbqUQCDAv/7rvxIKhWhoaOCuu+7i
      lVde4de//jVarZa+vj46OztZtGgR0dHRbNiwAbVaza5duygpKSE6OppQKITb7UYQBNLS0khK
      SuKdd95hw4YNLF++nP/6r//immuuYcOGDSN6eeNJfHw8K1eu5PHHH6etrY2VK1eyYsUKRFHk
      61//OqFQiLKysiHv6sorr2Tbtm088sgjlJSUsHv3bn7wgx+wcOFCqqurmT9/PjNnzkSpVPLt
      b38btVrNJZdcEpHhdDp58sknWbt2LYcPHyY9PZ177rmHlJQUUlNTI++6s7OTNWvWcO2113Lo
      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
      f/31uFwu/v73v7Nnz55RPefxedbb20teXh6VlZVotdqzzrN58+Zht9uRJGnUeXa8rI6ODmJj
      YxFFkWAwyEsvvYRjFNujnpj/ZrOZ1tZWFixYwI9+9CPa2tpGLCs6OppvfOMbOJ1OTCYTLS0t
      WK1WgsEgfX19/P73vz9l2gn3BTpw4ACdnZ2oVCpycnIIBoNkZWWNKZJEZWUlarWa+vp60tPT
      6e7uJjc3F5VKRXR09KhkNTQ04PP5qK6uJj09HYC//OUv1NbWYrFYRiXL7XZz9OhRKisrycnJ
      obW1lY0bN7Jx40YWLVo0KlkwNM9sNhstLS0YjcazzrOMjAzsdju9vb1jyrPjZWm1WrxeL9nZ
      2Rw8eBC9Xj8qWSfmf01NDRkZGXz44YcsWLBgVLIEQcDj8eBwOGhoaECr1dLT00N/f/+Z0050
      E6isrAy73U5iYiKbN29m/vz5VFVVYbPZqKqqGpWsoqIilEolWq2Wffv2MX36dFpbW8nMzGTL
      li2jkpWamkpWVhYdHR309fURCASw2+3MnTuXvXv3jmqY12QyMXv2bNra2tBqtbS0tNDV1UVx
      cTFtbW2j+jWDoXm2fft25s2bR0VFxbjk2axZs6ipqSErK2vUeXa8rP3790dq4NmzZ7Nt27ZR
      yTox/xMSEqitrWXGjBls374dr9c7YlkWi4WZM2dSVVVFWloadXV12Gw2gsEgvb29tLe3nzLt
      hBuAjMz5jOwOLTOlkQ1AZkrz/wFKfl0JbaKuNAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='ppmLongTerm' width='192'>
      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
      lUNevQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
